/* Generated By:JavaCC: Do not edit this line. JavaScriptMergeParserConstants.java */
package br.ufpe.cin.generated;

import java.io.*;

public interface JavaScriptMergeParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 9;
  int FORMAL_COMMENT = 10;
  int MULTI_LINE_COMMENT = 11;
  int ABSTRACT = 13;
  int ASSERT = 14;
  int BOOLEAN = 15;
  int BREAK = 16;
  int BYTE = 17;
  int CASE = 18;
  int CATCH = 19;
  int CHAR = 20;
  int CLASS = 21;
  int CONST = 22;
  int CONTINUE = 23;
  int _DEFAULT = 24;
  int DO = 25;
  int DOUBLE = 26;
  int ELSE = 27;
  int ENUM = 28;
  int EXTENDS = 29;
  int FALSE = 30;
  int FINAL = 31;
  int FINALLY = 32;
  int FLOAT = 33;
  int FOR = 34;
  int FUNCTION = 35;
  int GOTO = 36;
  int IF = 37;
  int IMPLEMENTS = 38;
  int IMPORT = 39;
  int INSTANCEOF = 40;
  int INT = 41;
  int INTERFACE = 42;
  int LONG = 43;
  int NATIVE = 44;
  int NEW = 45;
  int NULL = 46;
  int PACKAGE = 47;
  int PRIVATE = 48;
  int PROTECTED = 49;
  int PUBLIC = 50;
  int RETURN = 51;
  int SHORT = 52;
  int STATIC = 53;
  int STRICTFP = 54;
  int SUPER = 55;
  int SWITCH = 56;
  int SYNCHRONIZED = 57;
  int THIS = 58;
  int THROW = 59;
  int THROWS = 60;
  int TRANSIENT = 61;
  int TRUE = 62;
  int TRY = 63;
  int VOID = 64;
  int VOLATILE = 65;
  int WHILE = 66;
  int INTEGER_LITERAL = 67;
  int DECIMAL_LITERAL = 68;
  int HEX_LITERAL = 69;
  int BINARY_LITERAL = 70;
  int OCTAL_LITERAL = 71;
  int FLOATING_POINT_LITERAL = 72;
  int EXPONENT = 73;
  int CHARACTER_LITERAL = 74;
  int STRING_LITERAL = 75;
  int IDENTIFIER = 76;
  int LETTER = 77;
  int DIGIT = 78;
  int LPAREN = 79;
  int RPAREN = 80;
  int LBRACE = 81;
  int RBRACE = 82;
  int LBRACKET = 83;
  int RBRACKET = 84;
  int SEMICOLON = 85;
  int COMMA = 86;
  int DOT = 87;
  int AT = 88;
  int ASSIGN = 89;
  int LT = 90;
  int BANG = 91;
  int TILDE = 92;
  int HOOK = 93;
  int COLON = 94;
  int EQ = 95;
  int LE = 96;
  int GE = 97;
  int NE = 98;
  int SC_OR = 99;
  int SC_AND = 100;
  int INCR = 101;
  int DECR = 102;
  int PLUS = 103;
  int MINUS = 104;
  int STAR = 105;
  int SLASH = 106;
  int BIT_AND = 107;
  int BIT_OR = 108;
  int XOR = 109;
  int REM = 110;
  int LSHIFT = 111;
  int PLUSASSIGN = 112;
  int MINUSASSIGN = 113;
  int STARASSIGN = 114;
  int SLASHASSIGN = 115;
  int ANDASSIGN = 116;
  int ORASSIGN = 117;
  int XORASSIGN = 118;
  int REMASSIGN = 119;
  int LSHIFTASSIGN = 120;
  int RSIGNEDSHIFTASSIGN = 121;
  int RUNSIGNEDSHIFTASSIGN = 122;
  int ELLIPSIS = 123;
  int POINTER = 124;
  int DIAMOND = 125;
  int GT = 126;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_FORMAL_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"abstract\"",
    "\"assert\"",
    "\"boolean\"",
    "\"break\"",
    "\"byte\"",
    "\"case\"",
    "\"catch\"",
    "\"char\"",
    "\"class\"",
    "\"const\"",
    "\"continue\"",
    "\"default\"",
    "\"do\"",
    "\"double\"",
    "\"else\"",
    "\"enum\"",
    "\"extends\"",
    "\"false\"",
    "\"final\"",
    "\"finally\"",
    "\"float\"",
    "\"for\"",
    "\"function\"",
    "\"goto\"",
    "\"if\"",
    "\"implements\"",
    "\"import\"",
    "\"instanceof\"",
    "\"int\"",
    "\"interface\"",
    "\"long\"",
    "\"native\"",
    "\"new\"",
    "\"null\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"return\"",
    "\"short\"",
    "\"static\"",
    "\"strictfp\"",
    "\"super\"",
    "\"switch\"",
    "\"synchronized\"",
    "\"this\"",
    "\"throw\"",
    "\"throws\"",
    "\"transient\"",
    "\"true\"",
    "\"try\"",
    "\"void\"",
    "\"volatile\"",
    "\"while\"",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<BINARY_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"@\"",
    "\"=\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\"...\"",
    "\"->\"",
    "\"<>\"",
    "\">\"",
  };

}
